package ai.julie.core.model.message

/**
 * Content of a message, which can be text, image, or refusal.
 */
sealed class Content {
    /**
     * Text content in a message.
     */
    data class Text(
        val text: TextContent,
        val type: String = "text"
    ) : Content()

    /**
     * Image file content in a message.
     */
    data class ImageFile(
        val imageFile: ImageFileContent,
        val type: String = "image_file"
    ) : Content()

    /**
     * Image URL content in a message.
     */
    data class ImageUrl(
        val imageUrl: ImageUrlContent,
        val type: String = "image_url"
    ) : Content()

    /**
     * Refusal content generated by the assistant.
     */
    data class Refusal(
        val refusal: String,
        val type: String = "refusal"
    ) : Content()
}

/**
 * Text content with possible annotations.
 */
data class TextContent(
    /**
     * The data that makes up the text.
     */
    val value: String,

    /**
     * Annotations within the text.
     */
    val annotations: List<Annotation>? = null
)

/**
 * Annotation within text content.
 */
sealed class Annotation {
    /**
     * A citation within the message that points to a specific quote from a specific File.
     */
    data class FileCitation(
        val fileCitation: FileCitationContent,
        val startIndex: Int,
        val endIndex: Int,
        val text: String,
        val type: String = "file_citation"
    ) : Annotation()

    /**
     * A URL for the file that's generated when the assistant used the code_interpreter tool.
     */
    data class FilePath(
        val filePath: FilePathContent,
        val startIndex: Int,
        val endIndex: Int,
        val text: String,
        val type: String = "file_path"
    ) : Annotation()
}

/**
 * Content of a file citation annotation.
 */
data class FileCitationContent(
    /**
     * The ID of the specific File the citation is from.
     */
    val fileId: String
)

/**
 * Content of a file path annotation.
 */
data class FilePathContent(
    /**
     * The ID of the file that was generated.
     */
    val fileId: String
)

/**
 * Content of an image file.
 */
data class ImageFileContent(
    /**
     * The File ID of the image in the message content.
     */
    val fileId: String,

    /**
     * Specifies the detail level of the image if specified by the user.
     * `low` uses fewer tokens, you can opt in to high resolution using `high`.
     */
    val detail: String? = null
)

/**
 * Content of an image URL.
 */
data class ImageUrlContent(
    /**
     * The external URL of the image.
     */
    val url: String,

    /**
     * Specifies the detail level of the image.
     * `low` uses fewer tokens, you can opt in to high resolution using `high`.
     * Default value is `auto`
     */
    val detail: String = "auto"
)
