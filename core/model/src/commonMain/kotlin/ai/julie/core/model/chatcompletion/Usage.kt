package ai.julie.core.model.chatcompletion

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
data class Usage(

    /**
     * Number of tokens in the generated completion.
     */
    @SerialName("completion_tokens") val completionTokens: Int,

    /**
     * Number of tokens in the prompt.
     */
    @SerialName("prompt_tokens") val promptTokens: Int,

    /**
     * Total number of tokens used in the request (prompt + completion).
     */
    @SerialName("total_tokens") val totalTokens: Int,

    /**
     * Breakdown of tokens used in a completion.
     */
    @SerialName("completion_tokens_details") val completionTokensDetails: CompletionTokensDetails,

    /**
     * Breakdown of tokens used in the prompt.
     */
    @SerialName("prompt_tokens_details") val promptTokensDetails: PromptTokensDetails,
)

@Serializable
data class CompletionTokensDetails(

    /**
     * When using Predicted Outputs, the number of tokens in the prediction that appeared in the
     * completion.
     */
    @SerialName("accepted_prediction_tokens") val acceptedPredictionTokens: Int,

    /**
     * Audio input tokens generated by the model.
     */
    @SerialName("audio_tokens") val audioTokens: Int,

    /**
     * Tokens generated by the model for reasoning.
     */
    @SerialName("reasoning_tokens") val reasoningTokens: Int,

    /**
     * When using Predicted Outputs, the number of tokens in the prediction that did not appear in
     * the completion. However, like reasoning tokens, these tokens are still counted in the total
     * completion tokens for purposes of billing, output, and context window limits.
     */
    @SerialName("rejected_prediction_tokens") val rejectedPredictionTokens: Int,
)

@Serializable
data class PromptTokensDetails(

    /**
     * Audio input tokens present in the prompt.
     */
    @SerialName("audio_tokens") val audioTokens: Int,

    /**
     * Cached tokens present in the prompt.
     */
    @SerialName("cached_tokens") val cachedTokens: Int,
)
